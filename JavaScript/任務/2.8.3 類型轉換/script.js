/*
?    下面這些表達式的結果是什麼？
*/

"" + 1 + 0      // *    = 10        (1)
"" - 1 + 0      // *    = 1         (2)
true + false    // *    = 1
6 / "3"         // *    = 2
"2" * "3"       // *    = 6
4 + 5 + "px"    // *    = 9px
"$" + 4 + 5     // *    = $45
"4" - 2         // *    = 2
"4px" - 2       // *    = NaN
7 / 0           // *    = Infinity
"  -9  " + 5    // *    = "  -9  5" (3)
"  -9  " - 5    // *    = -14       (4)
null + 1        // *    = 0         (5)
undefined + 1   // *    = NaN       (6)
" \t \n" - 2    // *    = -2        (7)

/*
 * 1 有字符串的加法"" + 1，首先會將數字1轉換為一個字符串："" + 1 = "1"，然後我們得到"1" + 0，再次應用同樣的規則得到最終的結果。
 * 2 減法-（像大多數數學運算一樣）只能用於數字，它會使空字符串""轉換為0。
 * 3 帶字符串的加法會將數字5加到字符串之後。
 * 4 減法始終將字符串轉換為數字，因此它會使" -9 "轉換為數字-9（忽略了字符串首尾的空格）。
 * 5 null經過數字轉換之後會變為0。
 * 6 undefined經過數字轉換之後會變為NaN。
 * 7 字符串轉換為數字時，會忽略字符串的首尾處的空格字符。在這裡，整個字符串由空格字符組成，包括\t、\n以及它們之間的“常規”空格。因此，類似於空字符串，所以會變為0。
*/